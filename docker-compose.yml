version: '3.8'

services:
  frontend:
    build: ./frontend
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      BASE_URL: ${BASE_URL}

  backend:
    build: ./backend
    restart: always
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: xptracker
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: 24h
      ADMIN_USER: admin
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      BASE_URL: ${BASE_URL}

  db:
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: xptracker
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - default
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - '5050:8080'
    networks:
      - default

volumes:
  pgdata:
  pgadmin:

networks:
  default:
